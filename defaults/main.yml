---
nexus_version: ''

# This var is calculated dynamically by the role and
# will hold the currently installed version if any
# /!\ It should never be set directly /!\
# nexus_version_running: <unset>

nexus_download_dir: '/tmp'
nexus_download_url: 'https://download.sonatype.com/nexus/3'
nexus_os_group: 'nexus'
nexus_os_user: 'nexus'
nexus_os_user_home_dir: '/home/{{ nexus_os_user }}'
nexus_os_max_filedescriptors: 65536  # minimum value for nexus > 3.5.x
nexus_installation_dir: '/opt'
nexus_data_dir: '/var/nexus'
nexus_timezone: 'UTC'  # java timezone
nexus_tmp_dir: "{{ (ansible_os_family == 'RedHat') | ternary('/var/nexus-tmp', '/tmp/nexus') }}"
nexus_script_dir: '{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/etc/scripts'
nexus_plugin_urls: []
nexus_onboarding_wizard: false

# These are the default values for JVM Ram
# don't touch those unless you have read
# https://help.sonatype.com/repomanager3/system-requirements#SystemRequirements-Memory
# and you know what you are doing
# Note: those values probably belong to a host_vars files...
nexus_min_heap_size: "2703M"
nexus_max_heap_size: "{{ nexus_min_heap_size }}"
nexus_max_direct_memory: "{{ nexus_min_heap_size }}"

# Nexus Backup
nexus_backup_dir: '/var/nexus-backup'
nexus_backup_dir_create: true  # Shall we create the dir, or do you already have something in place?
nexus_restore_log: '{{ nexus_backup_dir }}/nexus-restore.log'
nexus_backup_configure: false  # Shall we configure backup ?
## For next schedule vars, see related schedule tasks settings
## https://github.com/ansible-ThoTeam/nexus3-oss/wiki/Scheduled-tasks-configuration#schedule-types-and-related-settings
nexus_backup_schedule_type: cron
nexus_backup_cron: "0 0 21 * * ?"  # See cron expression in nexus create task GUI
# nexus_backup_start_date_time: "yyyy-MM-dd'T'HH:mm:ss"
# nexus_backup_weekly_days: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']
# nexus_backup_monthly_days: {{ range(1,32) | list + [999] }}
nexus_backup_rotate: false  # Shall we rotate backups
nexus_backup_rotate_first: false  # Shall we rotate before making the current backup ?
nexus_backup_keep_rotations: 4  # Keep 4 backup rotations by default (current + last 3)

# Nexus restore procedure:
# run ansible-playbook example.yml -e "nexus_restore_point=(# date of choice -> %Y-%m-%d-%H-%M-%S #)"
# nexus_restore_point: '2017-02-22-01-30-32' # Example format

# Nexus purge procedure:
# run ansible-playbook example.yml -e "nexus_purge=true"

# Nexus default properties
nexus_default_port: 8081
nexus_docker_hosted_port: 9080
nexus_docker_proxy_port: 9081
nexus_docker_group_port: 9082
nexus_default_context_path: '/'
nexus_application_host: '{{ httpd_setup_enable | ternary("127.0.0.1", "0.0.0.0") }}'

# Nexus default admin password on first time install.
# This should not be set in your playbook.
# You can use your old password on the command line if
# you want to change your admin password after first install
# i.e.
# - Set your new password in nexus_admin_password
# - Run `ansible-playbook -i your/inventory.ini your_playbook.yml -e nexus_default_admin_password=oldpassword`
nexus_default_admin_password: 'admin123'
# Nexus admin password to set and use.
# Note: this should be vault encrypted in your playbook.
nexus_admin_password: 'changeme'

nexus_anonymous_access: false

nexus_public_hostname: 'nexus.vm'
nexus_public_scheme: https

# How should the role access the API for provisionning
nexus_api_hostname: localhost
nexus_api_scheme: http
nexus_api_validate_certs: "{{ nexus_api_scheme == 'https' }}"
nexus_api_context_path: "{{ nexus_default_context_path }}"
nexus_api_port: "{{ nexus_default_port }}"

# security realms
nexus_nuget_api_key_realm: false
nexus_npm_bearer_token_realm: false
nexus_rut_auth_realm: false
# nexus_rut_auth_header: "CUSTOM_HEADER"
nexus_ldap_realm: false
nexus_docker_bearer_token_realm: false

# Enable/disable audit capability
nexus_audit_enabled: false

# email server
nexus_email_server_enabled: false
nexus_email_server_host: "localhost"
nexus_email_server_port: 25
nexus_email_server_username: ""
nexus_email_server_password: ""
nexus_email_from_address: "nexus@example.org"
nexus_email_subject_prefix: ""
nexus_email_tls_enabled: false
nexus_email_tls_required: false
nexus_email_ssl_on_connect_enabled: false
nexus_email_ssl_check_server_identity_enabled: false
nexus_email_trust_store_enabled: false

nexus_branding_header: ""
nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"

httpd_setup_enable: false
httpd_server_name: "{{ nexus_public_hostname }}"
httpd_default_admin_email: "admin@example.com"
httpd_ssl_certificate_file: 'files/nexus.vm.crt'
httpd_ssl_certificate_key_file: 'files/nexus.vm.key'
# httpd_ssl_certificate_chain_file: "{{ httpd_ssl_certificate_file }}"
# If httpd_copy_ssl_files is false you need to provide the following variables:
# - httpd_ssl_cert_file_location
# - httpd_ssl_cert_key_location
# - httpd_ssl_cert_chain_file_location <= optionnal. Leave unset if none
httpd_copy_ssl_files: true
# These specifies to the vhost file where to find on the remote file system the certificates files.
httpd_ssl_cert_file_location: "/etc/pki/tls/certs/nexus.vm.crt"
httpd_ssl_cert_key_location: "/etc/pki/tls/private/nexus.vm.key"
# httpd_ssl_cert_chain_file_location: "{{ httpd_ssl_cert_file_location }}"

ldap_connections: []
# example ldap config :
#  - ldap_name: 'My Company LDAP' # used as a key to update the ldap config
#    ldap_protocol: 'ldaps' # ldap or ldaps
#    ldap_hostname: 'ldap.mycompany.com'
#    ldap_port: 636
#    ldap_use_trust_store: false  # Wether or not to use certs in nexus trust store
#    ldap_auth: 'simple' or 'none'
#    ldap_auth_username: 'username' (or DN)   (optional)
#    ldap_auth_password: 'password'           (optional)
#    ldap_search_base: 'dc=mycompany,dc=net'
#    ldap_user_base_dn: 'ou=users'
#    ldap_user_filter: '(cn=*)' # (optional)
#    ldap_user_object_class: 'inetOrgPerson'
#    ldap_user_id_attribute: 'uid'
#    ldap_user_real_name_attribute: 'cn'
#    ldap_user_email_attribute: 'mail'
#    ldap_group_base_dn: 'ou=groups'
#    ldap_group_object_class: 'posixGroup'
#    ldap_group_id_attribute: 'cn'
#    ldap_group_member_attribute: 'memberUid'
#    ldap_group_member_format: '${username}'

# http proxy
nexus_with_http_proxy: false
nexus_http_proxy_host: "proxy.example.com"
nexus_http_proxy_port: 8080
nexus_http_proxy_username: ""
nexus_http_proxy_password: ""
nexus_with_https_proxy: false
nexus_https_proxy_host: "proxy.example.com"
nexus_https_proxy_port: 8080
nexus_https_proxy_username: ""
nexus_https_proxy_password: ""
nexus_proxy_exclude_hosts:
  - "localhost"
  - "127.*"
  - "[::1]"

nexus_config_pypi: false
nexus_config_docker: false
nexus_config_raw: false
nexus_config_rubygems: false
nexus_config_bower: false
nexus_config_npm: false
nexus_config_nuget: false
nexus_config_gitlfs: false
nexus_config_yum: false
nexus_config_apt: false

nexus_content_selectors: []
# example selector item :
#  - name: docker-login
#    description: Selector for docker login privilege
#    search_expression: format=="docker" and path=~"/v2/"

# also see _nexus_privilege_defaults below
nexus_privileges:
  - name: all-repos-read  # used as key to update a privilege
    description: 'Read & Browse access to all repos'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: developers  # can map to a LDAP group id, also used as a key to update a role
    name: developers
    description: All developers
    privileges:
      - nx-search-read
      - all-repos-read
    roles: []

nexus_local_users: []
# example user item :
#  - username: jenkins # used as key to update
#    first_name: Jenkins
#    last_name: CI
#    email: support@company.com
#    password: "s3cr3t"
#    roles:
#      - developers

nexus_ldap_users: []
# example user
#  - username: j.doe
#    state: present
#    roles:
#      - "nx-admin"

nexus_delete_default_repos: false

nexus_delete_default_blobstore: false

#
# Nexus blobstore config
nexus_blob_split: false     # True - blobstores per format
nexus_blob_names:           # Splited blob name list @ blob_vars.yml
  pypi:
    blob: 'default'
  raw:
    blob: 'default'
  docker:
    blob: 'default'
  ruby:
    blob: 'default'
  bower:
    blob: 'default'
  npm:
    blob: 'default'
  nuget:
    blob: 'default'
  mvn:
    blob: 'default'
  gitlfs:
    blob: 'default'
  yum:
    blob: 'default'
  apt:
    blob: 'default'


nexus_blobstores: []
# example blobstore item :
# - name: separate-storage
#   type: file
#   path: /mnt/custom/path
# - name: s3-blobstore
#   type: S3
#   config:
#     bucket: s3-blobstore
#     accessKeyId: "{{ VAULT_ENCRYPTED_KEY_ID }}"
#     secretAccessKey: "{{ VAULT_ENCRYPTED_ACCESS_KEY }}"

# Cleanup Polices
nexus_repos_cleanup_policies: []
#   - name: mvn_cleanup
#     format: maven2
#     mode:
#     notes: ""
#     criteria:
#       lastBlobUpdated: 60  # Optional
#       lastDownloaded: 120  # Optional
#       preRelease: RELEASES # Optional: PRERELEASES or RELEASES
#       regexKey: "foo.*"    # Optional


# also see _nexus_repos_maven_defaults below
nexus_repos_maven_proxy:
  - name: central
    remote_url: 'https://repo1.maven.org/maven2/'
    layout_policy: permissive
    # maximum_component_age: -1
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440
  - name: jboss
    remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'
    # maximum_component_age: -1
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# example with a login/password :
# - name: secret-remote-repo
#   remote_url: 'https://company.com/repo/secure/private/go/away'
#   remote_username: 'username'
#   remote_password: 'secret'
#   # maximum_component_age: -1
#   # maximum_metadata_age: 1440
#   # negative_cache_enabled: true
#   # negative_cache_ttl: 1440

nexus_repos_maven_hosted:
  - name: private-release
    version_policy: release
    write_policy: allow_once  # one of "allow", "allow_once" or "deny"

nexus_repos_maven_group:
  - name: public
    member_repos:
      - central
      - jboss

# Scheduled tasks
# Note: these are tasks you define by yourself (default: none)
# If you used `nexus_backup_configure: true` above you will see a scheduled task for this
# in your GUI which is not part of the below list
nexus_scheduled_tasks: []
#  #  Example task to compact blobstore :
#  - name: compact-docker-blobstore
#    cron: '0 0 22 * * ?'
#    typeId: blobstore.compact
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      blobstoreName: {{ nexus_blob_names.docker.blob }} # all task attributes are stored as strings by nexus internally
#  #  Example task to purge maven snapshots
#  - name: Purge-maven-snapshots
#    cron: '0 50 23 * * ?'
#    typeId: repository.maven.remove-snapshots
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
#      minimumRetained: "2"
#      snapshotRetentionDays: "2"
#      gracePeriodInDays: "2"
#    booleanTaskProperties:
#      removeIfReleased: true
#  #  Example task to purge unused docker manifest and images
#  - name: Purge unused docker manifests and images
#    cron: '0 55 23 * * ?'
#    typeId: "repository.docker.gc"
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
#  #  Example task to purge incomplete docker uploads
#  - name: Purge incomplete docker uploads
#    cron: '0 0 0 * * ?'
#    typeId: "repository.docker.upload-purge"
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      age: "24"

_nexus_privilege_defaults:
  type: repository-view
  format: maven2
  actions:
    - read

_nexus_repos_maven_defaults:
  blob_store: "{{ nexus_blob_names.mvn.blob }}"
  strict_content_validation: true
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: -1  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

# pypi support ...
_nexus_repos_pypi_defaults:
  blob_store: "{{ nexus_blob_names.pypi.blob }}"
  strict_content_validation: true
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_pypi_hosted:
  - name: pypi-internal
    version_policy: release
    write_policy: allow  # one of "allow", "allow_once" or "deny"

nexus_repos_pypi_group:
  - name: pypi-all
    member_repos:
      - pypi-internal
      - pypi

nexus_repos_pypi_proxy:
  - name: pypi
    remote_url: 'https://pypi.python.org/'
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# raw repo support

_nexus_repos_raw_defaults:
  blob_store: "{{ nexus_blob_names.raw.blob }}"
  strict_content_validation: true
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only


nexus_repos_raw_proxy:
  - name: ubuntu-archive
    remote_url: 'http://archive.ubuntu.com/ubuntu/'
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

nexus_repos_raw_hosted:
  - name: raw-internal
    version_policy: release
    write_policy: allow_once  # one of "allow", "allow_once" or "deny"

nexus_repos_raw_group:
  - name: raw-all
    member_repos:
      - raw-internal
      - ubuntu-archive

# Docker support
_nexus_repos_docker_defaults:
  blob_store: "{{ nexus_blob_names.docker.blob }}"
  force_basic_auth: true
  strict_content_validation: true
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only
  # More about Foreign Layers https://help.sonatype.com/repomanager3/formats/docker-registry/foreign-layers
  cache_foreign_layers: false  # Nexus gui default. For proxies only
  foreign_layer_url_whitelist: []  # Nexus gui default. For proxies only

nexus_repos_docker_hosted:
  - name: docker-hosted
    http_port: "{{ nexus_docker_hosted_port }}"
    v1_enabled: True

nexus_repos_docker_proxy:
  - name: docker-proxy
    http_port: "{{ nexus_docker_proxy_port }}"
    v1_enabled: True
    index_type: "HUB"
    remote_url: "https://registry-1.docker.io"
    use_nexus_certificates_to_access_index: false
    # cache_foreign_layers: true
    # foreign_layer_url_whitelist:
    #   - "https?://go\\.microsoft\\.com/.*"
    #   - "https://.*\\.azurecr\\.io/.*"
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

nexus_repos_docker_group:
  - name: docker-group
    http_port: "{{ nexus_docker_group_port }}"
    v1_enabled: True
    member_repos:
      - docker-hosted
      - docker-proxy

# RubyGems support
_nexus_repos_rubygems_defaults:
  blob_store: "{{ nexus_blob_names.ruby.blob }}"
  strict_content_validation: true
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_rubygems_hosted:
  - name: rubygems-hosted
    blob_store: "{{ nexus_blob_names.ruby.blob }}"

nexus_repos_rubygems_group:
  - name: rubygems
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    member_repos:
      - rubygems-hosted
      - rubygems-proxy

nexus_repos_rubygems_proxy:
  - name: rubygems-proxy
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    remote_url: https://rubygems.org
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# Bower support
_nexus_repos_bower_defaults:
  blob_store: "{{ nexus_blob_names.bower.blob }}"
  strict_content_validation: true
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_bower_hosted:
  - name: bower-internal
    blob_store: "{{ nexus_blob_names.bower.blob }}"

nexus_repos_bower_group:
  - name: bower-all
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    member_repos:
      - bower-internal
      - bower-proxy

nexus_repos_bower_proxy:
  - name: bower-proxy
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    remote_url: http://bower.herokuapp.com
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# npm support
_nexus_repos_npm_defaults:
  blob_store: "{{ nexus_blob_names.npm.blob }}"
  strict_content_validation: true
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_npm_hosted:
  - name: npm-internal
    blob_store: "{{ nexus_blob_names.npm.blob }}"

nexus_repos_npm_group:
  - name: npm-all
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    member_repos:
      - npm-internal
      - npm-proxy

nexus_repos_npm_proxy:
  - name: npm-proxy
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    remote_url: https://registry.npmjs.org
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

_nexus_repos_nuget_defaults:
  blob_store: "{{ nexus_blob_names.nuget.blob }}"
  strict_content_validation: true
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_nuget_hosted:
  - name: nuget-internal
    blob_store: "{{ nexus_blob_names.nuget.blob }}"

nexus_repos_nuget_group:
  - name: nuget-all
    blob_store: "{{ nexus_blob_names.nuget.blob }}"
    member_repos:
      - nuget-internal
      - nuget-proxy

nexus_repos_nuget_proxy:
  - name: nuget-proxy
    blob_store: "{{ nexus_blob_names.nuget.blob }}"
    remote_url: http://www.nuget.org/api/v2
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# gitlfs support
_nexus_repos_gitlfs_defaults:
  blob_store: "{{ nexus_blob_names.gitlfs.blob }}"
  strict_content_validation: true
  write_policy: allow  # one of "allow", "allow_once" or "deny"

nexus_repos_gitlfs_hosted:
  - name: gitlfs-internal
    blob_store: "{{ nexus_blob_names.gitlfs.blob }}"

# yum support ...
nexus_repos_yum_hosted: []
nexus_repos_yum_proxy: []
# Example for epel centos-7 x86_64
# - name: epel_centos_7_x86_64
#   remote_url: http://download.fedoraproject.org/pub/epel/7/x86_64
#   # maximum_component_age: 1440
#   # maximum_metadata_age: 1440
#   # negative_cache_enabled: true
#   # negative_cache_ttl: 1440
nexus_repos_yum_group: []

_nexus_repos_yum_defaults:
  blob_store: "{{ nexus_blob_names.yum.blob }}"
  repodata_depth: 0  # from 0 to 5
  strict_content_validation: true
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

# apt support
# More on how to work with apt repos https://help.sonatype.com/repomanager3/formats/apt-repositories
_nexus_repos_apt_defaults:
  blob_store: "{{ nexus_blob_names.apt.blob }}"
  strict_content_validation: true
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only
  flat: false  # Nexus gui default. For proxies only

nexus_repos_apt_hosted: []
# - name: private_apt_centos_7
#   distribution: jessie
#   keypair: |-
#     -----BEGIN PGP PRIVATE KEY BLOCK-----
#
#     lQWGBF2Ym3ABDACtu4R3enO2TehVslkRXc4ZcMkaAMIcJgOLo/IQBUnN8dInGLFR
#     ...
#     -----END PGP PRIVATE KEY BLOCK-----
#   passphrase: "none"
nexus_repos_apt_proxy: []
# - name: apt_centos_7_x86_64
#   remote_url: http://download.fedoraproject.org/pub/epel/7/x86_64
#   distribution: jessie
#   flat: true
