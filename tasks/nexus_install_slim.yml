---

- name: Create Nexus data/tmp directory.
  file:
    path: "{{ nexus_data_dir }}"
    state: "directory"
  delegate_to: localhost

- name: Access scripts API endpoint with defined admin password
  uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}\
      {{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}"
    method: 'HEAD'
    user: 'admin'
    password: "{{ nexus_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
    validate_certs: "{{ nexus_api_validate_certs }}"
  register: nexus_api_head_with_defined_password
  check_mode: no

- name: Register defined admin password for next operations
  set_fact:
    current_nexus_admin_password: "{{ nexus_admin_password }}"
  when: nexus_api_head_with_defined_password.status == 200
  no_log: true

- name: Access scripts API endpoint with default admin password
  uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}\
      {{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}"
    method: 'HEAD'
    user: 'admin'
    password: "{{ nexus_default_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
    validate_certs: "{{ nexus_api_validate_certs }}"
  register: nexus_api_head_with_default_password
  when: nexus_api_head_with_defined_password.status == 401

- name: Register default admin password for next operations
  set_fact:
    current_nexus_admin_password: "{{ nexus_default_admin_password }}"
  when: (nexus_api_head_with_default_password.status | default(false)) == 200

- name: Ensure current Nexus password is known
  fail:
    msg: >-
      Failed to determine current Nexus password
      (it is neither the default/generated nor the defined password).
      If you are trying to change nexus_admin_password after first
      install, please set `-e nexus_default_admin_password=oldPassword`
      on the ansible-playbook command line.
      See https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/README.md#change-admin-password-after-first-install
  when: current_nexus_admin_password is not defined

- block:
    - name: Force (re-)registration of groovy scripts (purge reference dir)
      file:
        path: "{{ nexus_data_dir }}/groovy-raw-scripts"
        state: absent
      when: nexus_force_groovy_scripts_registration | default(false)

    - name: Create directories to hold current groovy scripts for reference
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ nexus_data_dir }}/groovy-raw-scripts/current"
        - "{{ nexus_data_dir }}/groovy-raw-scripts/new"

    - name: Archive scripts
      become: no
      archive:
        path: "{{ role_path }}/files/groovy/*"
        dest: "/tmp/nexus-upload-groovy-scripts.tar.gz"
      run_once: true
      delegate_to: localhost

    - name: Upload new scripts
      unarchive:
        src: "/tmp/nexus-upload-groovy-scripts.tar.gz"
        dest: "{{ nexus_data_dir }}/groovy-raw-scripts/new/"

  delegate_to: localhost

- block:
    - name: Sync new scripts to old and get differences
      shell: >
        set -o pipefail &&
        rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/
        | cut -d" " -f 2 | sed "s/\.groovy//g"
      register: nexus_groovy_files_changed
      check_mode: no
      changed_when: false
      # simple check on changed files kept on host
      # skip ansible lint (we don't want to use synchronize module for this)
      args:
        warn: false
        executable: /bin/bash

  delegate_to: localhost
  rescue:
    - name: Fail with information on rsync error
      fail:
        msg: >-
          A task involving running rsync on the host just failed, most probably because rsync is not installed.
          Please make sure rsync is installed on your host or double check the above error and try again.

- name: Declare new or changed groovy scripts in nexus
  include_tasks: declare_script_each.yml
  with_items: "{{ nexus_groovy_files_changed.stdout_lines }}"

- name: Change admin password if we are still using default
  block:
    - include_tasks: call_script.yml
      vars:
        script_name: update_admin_password
        args:
          new_password: "{{ nexus_admin_password }}"

    - name: Admin password changed
      set_fact:
        current_nexus_admin_password: "{{ nexus_admin_password }}"
      no_log: true

  when: (nexus_api_head_with_default_password.status | default(false)) == 200
