---
- name: systemd-reload
  systemd:
    daemon-reload: yes
    name: nexus.service
  when: ansible_os_family != "Windows"

- name: nexus systemd service restart
  systemd:
    name: nexus.service
    state: restarted
    no_block: yes
  listen: nexus-service-restart
  when: 
  - ansible_os_family != "Windows"
  - ansible_service_mgr == 'systemd'


- name: nexus sysv service restart
  service:
    name: nexus
    state: restarted
  listen: nexus-service-restart
  when: 
  - ansible_os_family != "Windows"
  - ansible_service_mgr != 'systemd'


- name: nexus win service restart
  win_service:
    name: nexus
    state: restarted
  listen: nexus-service-restart
  when: ansible_os_family == "Windows"

- name: nexus systemd service stop
  systemd:
    name: nexus.service
    state: stopped
  listen: nexus-service-stop
  when: 
  - ansible_os_family != "Windows"
  - nexus_systemd_service_file.stat.exists

- name: nexus sysv service stop
  service:
    name: nexus
    state: stopped
  listen: nexus-service-stop
  when: 
  - ansible_os_family != "Windows"
  - nexus_sysv_service_file.stat.exists

- name: nexus win service stop
  win_service:
    name: nexus
    state: stopped
  listen: nexus-service-stop
  when: 
  - ansible_os_family == "Windows"
  - nexus_win_service.exists 

- name: wait-for-nexus
  wait_for:
    path: "{{ nexus_data_dir }}/log/nexus.log"
    search_regex: "Started Sonatype Nexus .*"
    timeout: 1800
  listen: wait-for-nexus
  when: ansible_os_family != "Windows"

- name: wait-for-nexus (Windows)
  win_wait_for:
    path: '{{ nexus_data_dir }}\log\nexus.log'
    search_regex: "Started Sonatype Nexus .*"
    timeout: 1800
  listen: wait-for-nexus
  when: ansible_os_family == "Windows"

- name: wait-for-nexus-port
  wait_for:
    port: "{{ nexus_default_port }}"
    timeout: "{{ nexus_wait_for_port_timeout | default(omit) }}"
  retries: "{{ nexus_wait_for_port_retries | default(omit) }}"
  register: wait_for_result
  until: wait_for_result is success
  listen: wait-for-nexus-port
  when: ansible_os_family != "Windows"

- name: wait-for-nexus-port HTTP (Windows)
  win_wait_for:
    port: "{{ nexus_default_port }}"
    timeout: "{{ nexus_wait_for_port_timeout | default(omit) }}"
  retries: "{{ nexus_wait_for_port_retries | default(omit) }}"
  register: wait_for_result
  until: wait_for_result is success
  listen: wait-for-nexus-port
  when: 
  - ansible_os_family == "Windows"
  - nexus_default_port is defined 
  - nexus_default_port > 0

- name: wait-for-nexus-port HTTPS (Windows)
  win_wait_for:
    port: "{{ nexus_ssl_port }}"
    timeout: "{{ nexus_wait_for_port_timeout | default(omit) }}"
  retries: "{{ nexus_wait_for_port_retries | default(omit) }}"
  register: wait_for_result
  until: wait_for_result is success
  listen: wait-for-nexus-port
  when: 
  - ansible_os_family == "Windows"
  - nexus_ssl_port is defined

- name: httpd-service-reload
  systemd:
    name: "{{ httpd_package_name }}.service"
    state: reloaded
    enabled: yes
    no_block: yes
  when: ansible_os_family != "Windows"

- name: wait-for-httpd
  wait_for:
    port: 443
    delay: 5
